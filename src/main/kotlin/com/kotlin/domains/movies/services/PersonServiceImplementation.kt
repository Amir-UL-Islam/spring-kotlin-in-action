package com.kotlin.domains.movies.services

import com.kotlin.domains.movies.dtos.PersonDTO
import com.kotlin.domains.movies.mappers.ImplementationOfPersonMapper
import com.kotlin.domains.movies.repositories.PersonRepository
import org.springframework.stereotype.Service

@Service
class PersonServiceImplementation(
    private val personRepository: PersonRepository,
    private val personMapperImplementation: ImplementationOfPersonMapper
) {
    fun createPerson(personDTO: PersonDTO) : PersonDTO {
//        In this case, we won't get the id. Because  id will be auto-generated by the database when we save the entity
//        personRepository.save(personMapper.toEntity(personDTO));
//        return personDTO;

//        So go to this approach instead
        val person = personMapperImplementation.toEntity(personDTO);
        personRepository.save(person);
        return personMapperImplementation.toDTO(person); // Now When the DTO will be called it will return a person with the id

//        Or we can do this
//        return personMapperImplementation.toDTO(personRepository.save(personMapperImplementation.toEntity(personDTO)));

    }

    // Getting all Persons
    fun getPersons(): List<PersonDTO> {
        return personRepository.findAll().map { personMapperImplementation.toDTO(it) }
    }
}